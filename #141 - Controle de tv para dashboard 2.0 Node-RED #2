<template>
  <div class="tv-remote-container_tv_lg">
    <div class="top-buttons_tv_lg">
      <button 
        class="power-button_tv_lg" 
        @click="power"
        title="Power"
      >
        <v-icon>mdi-power</v-icon>
      </button>
      <button 
        class="home-button_tv_lg" 
        @click="inicio"
        title="Home"
      >
        <v-icon>mdi-home-circle-outline</v-icon>
      </button>
    </div>

    <div class="volume-controls_tv_lg">
      <button 
        class="volume-button_tv_lg" 
        @click="mais"
        title="Volume +"
      >
        <v-icon>mdi-plus</v-icon>
      </button>
      <button 
        class="volume-button_tv_lg" 
        @click="menos"
        title="Volume -"
      >
        <v-icon>mdi-minus</v-icon>
      </button>
    </div>

    <div class="directional-controls_tv_lg">
      <button 
        class="arrow-button_tv_lg up_tv_lg" 
        @click="cima"
        title="Up"
      >
        <v-icon>mdi-arrow-up</v-icon>
      </button>
      
      <div class="middle-row_tv_lg">
        <button 
          class="arrow-button_tv_lg left_tv_lg" 
          @click="esquerda"
          title="Left"
        >
          <v-icon>mdi-arrow-left</v-icon>
        </button>
        
        <button 
          class="select-button_tv_lg" 
          @click="select"
          title="Select/OK"
        >
          <v-icon>mdi-checkbox-blank-circle</v-icon>
        </button>
        
        <button 
          class="arrow-button_tv_lg right_tv_lg" 
          @click="direita"
          title="Right"
        >
          <v-icon>mdi-arrow-right</v-icon>
        </button>
      </div>
      
      <button 
        class="arrow-button_tv_lg down_tv_lg" 
        @click="baixo"
        title="Down"
      >
        <v-icon>mdi-arrow-down</v-icon>
      </button>
    </div>
  </div>
</template>

<script>
export default {
  name: 'TvRemoteControl',
  methods: { 
    inicio() {
      this.send({ payload: {inicio: "ON"}});
    },
    power() {
      this.send({ payload: {power: "ON"}});
    },
    mais() {
      this.send({ payload: {mais: "ON"}});
    },
    menos() {
      this.send({ payload: {menos: "ON"}});
    },
    cima() {
      this.send({ payload: {cima: "ON"}});
    },
    direita() {
      this.send({ payload: {direita: "ON"}});
    },
    esquerda() {
      this.send({ payload: {esquerda: "ON"}});
    },
    select() {
      this.send({ payload: {select: "ON"}});
    },
    baixo() {
      this.send({ payload: {baixo: "ON"}});
    }
  }
}
</script>

<style scoped>
.tv-remote-container_tv_lg {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 280px;
  padding: 24px;
  background: linear-gradient(145deg, #2a2a2a, #1f1f1f);
  border: 2px solid #404040;
  border-radius: 24px;
  box-shadow: 
    0 8px 16px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(200, 200, 200, 0.1);
  gap: 20px;
  margin: auto;
}

.top-buttons_tv_lg {
  display: flex;
  justify-content: space-between;
  width: 100%;
  align-items: flex-start;
}

.power-button_tv_lg {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  background: linear-gradient(145deg, #1a1a1a, #0d0d0d);
  border: 2px solid #404040;
  border-radius: 12px;
  color: #e0e0e0;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 
    0 4px 8px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(200, 200, 200, 0.2);
}

.power-button_tv_lg:hover {
  transform: translateY(-2px);
  background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
  box-shadow: 
    0 6px 12px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(200, 200, 200, 0.2);
}

.power-button_tv_lg:active {
  transform: translateY(0);
  background: linear-gradient(145deg, #0d0d0d, #000000);
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.home-button_tv_lg {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  background: linear-gradient(145deg, #4a4a4a, #3a3a3a);
  border: 2px solid #606060;
  border-radius: 12px;
  color: #d0d0d0;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 
    0 3px 6px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(200, 200, 200, 0.1);
}

.home-button_tv_lg:hover {
  transform: translateY(-1px);
  background: linear-gradient(145deg, #5a5a5a, #4a4a4a);
}

.home-button_tv_lg:active {
  transform: translateY(0);
  background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.volume-controls_tv_lg {
  display: flex;
  justify-content: space-evenly;
  width: 180px;
  padding: 12px;
  background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
  border: 2px solid #505050;
  border-radius: 16px;
  gap: 8px;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.volume-button_tv_lg {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  background: linear-gradient(145deg, #5a5a5a, #4a4a4a);
  border: 2px solid #707070;
  border-radius: 12px;
  color: #d0d0d0;
  cursor: pointer;
  transition: all 0.15s ease;
}

.volume-button_tv_lg:hover {
  background: linear-gradient(145deg, #6a6a6a, #5a5a5a);
  transform: translateY(-1px);
}

.volume-button_tv_lg:active {
  transform: translateY(0);
  background: linear-gradient(145deg, #4a4a4a, #3a3a3a);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.directional-controls_tv_lg {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 200px;
  padding: 16px;
  background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
  border: 2px solid #505050;
  border-radius: 16px;
  gap: 8px;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.middle-row_tv_lg {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  gap: 8px;
}

.arrow-button_tv_lg {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 52px;
  height: 52px;
  background: linear-gradient(145deg, #5a5a5a, #4a4a4a);
  border: 2px solid #707070;
  border-radius: 12px;
  color: #d0d0d0;
  cursor: pointer;
  transition: all 0.15s ease;
}

.arrow-button_tv_lg:hover {
  background: linear-gradient(145deg, #6a6a6a, #5a5a5a);
  transform: translateY(-1px);
}

.arrow-button_tv_lg:active {
  transform: translateY(0);
  background: linear-gradient(145deg, #4a4a4a, #3a3a3a);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.select-button_tv_lg {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
  border: 2px solid #404040;
  border-radius: 12px;
  color: #e0e0e0;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 
    0 4px 8px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(200, 200, 200, 0.2);
}

.select-button_tv_lg:hover {
  transform: translateY(-2px);
  background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
  box-shadow: 
    0 6px 12px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(200, 200, 200, 0.2);
}

.select-button_tv_lg:active {
  transform: translateY(0);
  background: linear-gradient(145deg, #1a1a1a, #0d0d0d);
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Icon sizes */
.power-button_tv_lg .v-icon,
.select-button_tv_lg .v-icon {
  font-size: 28px;
}

.home-button_tv_lg .v-icon {
  font-size: 26px;
}

.volume-button_tv_lg .v-icon {
  font-size: 24px;
}

.arrow-button_tv_lg .v-icon {
  font-size: 32px;
}

@media (max-width: 768px) {
  .tv-remote-container_tv_lg {
    width: 260px;
    padding: 20px;
  }
  
  .volume-controls_tv_lg,
  .directional-controls_tv_lg {
    width: 160px;
  }
}
</style>


--------------------------------------------------------------

if (msg.payload.power === "ON")  {
    node.send([{ payload: "ON" }, null, null, null, null, null, null, null, null]);
}
if (msg.payload.menos === "ON") {
    node.send([null, { payload: "ON" }, null, null, null, null, null, null, null]);
}
if (msg.payload.mais === "ON") {
    node.send([null, null, { payload: "ON" }, null, null, null, null, null, null]);
}
if (msg.payload.cima === "ON") {
    node.send([null, null, null, { payload: "ON" }, null, null, null, null, null]);
}
if (msg.payload.baixo === "ON") {
    node.send([null, null, null, null, { payload: "ON" }, null, null, null, null]);
}
if (msg.payload.direita === "ON") {
    node.send([null, null, null, null, null, { payload: "ON" }, null, null, null]);
}
if (msg.payload.esquerda === "ON") {
    node.send([null, null, null, null, null, null, { payload: "ON" }, null, null]);
}
if (msg.payload.select === "ON") {
    node.send([null, null, null, null, null, null, null, { payload: "ON" }, null]);
}
if (msg.payload.inicio === "ON") {
    node.send([null, null, null, null, null, null, null, null, { payload: "ON" }]);
}
